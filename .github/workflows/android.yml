name: Android CI

on:
  push:
    branches: [ "**" ]
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: notify telegram
        uses: EverythingSuckz/github-telegram-notify@main
        continue-on-error: true
        with:
          bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: -1002355760766
          topic_id: 11
          
  build_release_apk:
    name: Build App Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'oracle'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Build with Gradle (arm64-v8a)
        id: gradle_build_release_arm64
        run: ./gradlew assembleArch_arm64Release

      - name: Build with Gradle (armeabi-v7a)
        id: gradle_build_release_arm32
        run: ./gradlew assembleArch_arm32Release

      - name: Upload release apk (arm64-v8a)
        uses: actions/upload-artifact@v4
        with:
          name: app-arm64
          path: app/build/outputs/apk/release/app-arm64-v8a-release.apk

      - name: Upload release apk (armeabi-v7a)
        uses: actions/upload-artifact@v4
        with:
          name: app-arm32
          path: app/build/outputs/apk/release/app-armeabi-v7a-release.apk
          
      - name: List outputs
        run: tree app/build/

  send_release_apk:
    name: Send Release APK (arm64-v8a+armeabi-v7a)
    runs-on: ubuntu-latest
    needs: build_release_apk
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          
      - name: Download release apk
        uses: actions/download-artifact@v4
        with:
          name: app-release
          
      - name: List repo contents
        run: ls
          
      - name: Get the last commit message
        id: get_commit_msg
        run: |
          commit_message=$(git log -1 --pretty=format:'%s')
          echo "message=$commit_message" >> $GITHUB_OUTPUT
          
      - name: Rename file 
        run: |
          mv app-arm64-v8a-release.apk sparkles-arm64-release.apk
          mv app-armeabi-v7a-release.apk sparkles-arm32-release.apk
          ls 

      - name: Send APK to Release Channel Telegram with Topic ID (arm64)
        if: success()
        continue-on-error: true
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
            -F chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -F message_thread_id="11" \
            -F document=@"sparkles-arm64-release.apk" \
            -F caption="(arm64) ${{ github.event.head_commit.message }} by ${{ github.actor }}"

      - name: Send APK to Release Channel Telegram with Topic ID (arm32)
        if: success()
        continue-on-error: true
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
            -F chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -F message_thread_id="11" \
            -F document=@"sparkles-arm32-release.apk" \
            -F caption="(arm32) ${{ github.event.head_commit.message }} by ${{ github.actor }}"
